name: Build and Deploy to GKE

on:
  push:
    branches:
    - master

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: cluster-1    
  GKE_ZONE: europe-west1-b

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v1
        with:
          version: v1.29
  goTest:
    runs-on: ubuntu-latest
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17.x
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test
      run: make cov
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.txt # optional
  frontTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: make test-front
  setup-build-publish-deploy:
    needs: [frontTest, goTest, golangci]
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '290.0.1'
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
    # Build the Docker image
    - name: Build and tag images
      run: |-
        chmod u+x ./deployments/buildAndTag.sh
        ./deployments/buildAndTag.sh "gcr.io/$PROJECT_ID/character:$GITHUB_SHA" ./cmd/characters/
        ./deployments/buildAndTag.sh "gcr.io/$PROJECT_ID/random:$GITHUB_SHA" ./cmd/random-micro/
        ./deployments/buildAndTag.sh "gcr.io/$PROJECT_ID/auth:$GITHUB_SHA" ./cmd/auth/
        ./deployments/buildAndTag.sh "gcr.io/$PROJECT_ID/backend:$GITHUB_SHA" ./cmd/backend/
        docker build --tag gcr.io/$PROJECT_ID/website:$GITHUB_SHA ./website
    # Push the Docker image to Google Container Registry
    - name: Publish to GCR
      run: |-
        chmod u+x ./deployments/pushToRegistry.sh
        ./deployments/pushToRegistry.sh "gcr.io/$PROJECT_ID/character:$GITHUB_SHA"
        ./deployments/pushToRegistry.sh "gcr.io/$PROJECT_ID/random:$GITHUB_SHA"
        ./deployments/pushToRegistry.sh "gcr.io/$PROJECT_ID/auth:$GITHUB_SHA"
        ./deployments/pushToRegistry.sh "gcr.io/$PROJECT_ID/backend:$GITHUB_SHA"
        ./deployments/pushToRegistry.sh "gcr.io/$PROJECT_ID/website:$GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        cd ./k8s
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        cd ./k8s
        ./kustomize edit set image gcr.io/PROJECT_ID/CHARACTER:TAG=gcr.io/$PROJECT_ID/character:$GITHUB_SHA
        ./kustomize edit set image gcr.io/PROJECT_ID/RANDOM:TAG=gcr.io/$PROJECT_ID/random:$GITHUB_SHA
        ./kustomize edit set image gcr.io/PROJECT_ID/AUTH:TAG=gcr.io/$PROJECT_ID/auth:$GITHUB_SHA
        ./kustomize edit set image gcr.io/PROJECT_ID/BACKEND:TAG=gcr.io/$PROJECT_ID/backend:$GITHUB_SHA
        ./kustomize edit set image gcr.io/PROJECT_ID/WEBSITE:TAG=gcr.io/$PROJECT_ID/website:$GITHUB_SHA
        ./kustomize build . | kubectl apply -f -
        kubectl rollout status deployment/character-micro
        kubectl rollout status deployment/random-micro
        kubectl rollout status deployment/auth-micro
        kubectl rollout status deployment/backend
        kubectl rollout status deployment/website
        kubectl get services -o wide