// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	context "context"

	auth "github.com/hectorgabucio/donotdevelopmyapp/internal/auth"

	grpc "google.golang.org/grpc"

	mock "github.com/stretchr/testify/mock"
)

// AuthServiceClient is an autogenerated mock type for the AuthServiceClient type
type AuthServiceClient struct {
	mock.Mock
}

// GetUser provides a mock function with given fields: ctx, in, opts
func (_m *AuthServiceClient) GetUser(ctx context.Context, in *auth.Token, opts ...grpc.CallOption) (*auth.User, error) {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, in)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 *auth.User
	if rf, ok := ret.Get(0).(func(context.Context, *auth.Token, ...grpc.CallOption) *auth.User); ok {
		r0 = rf(ctx, in, opts...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*auth.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *auth.Token, ...grpc.CallOption) error); ok {
		r1 = rf(ctx, in, opts...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
